{"version":3,"sources":["constants.js","htmlGenerators.js","GlowButton.js","FieldInputRow.js","DarkStyleSwitch.js","useCurrentWidth.js","HippoBar.js","App.js","serviceWorker.js","index.js"],"names":["FIELD_TYPES","number","text","zillowLink","wikipediaLink","subSectionHeader","BLANK_INPUT_FIELD","fieldType","fieldName","fieldDisplayName","DEFAULT_INPUT_VALUES","fieldDisplayNameStyle","isSubSectionHeader","fieldWrapperStyle","isText","textComponent","textOrNumberContent","link","url","fieldContent","console","warn","fieldSection","fieldSectionsAccumulator","fieldInfo","content","includes","GlowButton","children","onClick","className","type","FieldInputRow","index","fieldInputValue","onChange","onDeleteField","showFieldName","fieldDisplayNameLabel","calculateUIInfo","style","display","flex","addonBefore","value","target","placeholer","trim","defaultValue","Option","danger","DarkStyleSwitch","isDarkStyle","onToggle","checkedChildren","CheckOutlined","unCheckedChildren","CloseOutlined","checked","getWidth","window","innerWidth","document","documentElement","clientWidth","body","HippoBar","pageSectionIndex","pageSectionCount","isFirstSection","isLastSection","hippoLeftPosition","useState","width","setWidth","useEffect","timeoutId","resizeListener","clearTimeout","setTimeout","addEventListener","removeEventListener","useCurrentWidth","hippoTopPosition","fontSize","role","aria-label","left","top","marginRight","App","setPageSectionIndex","onStepEnter","useCallback","element","data","direction","setIsDarkStyle","fieldInputValues","setFieldInputValues","onChangeInput","newValue","i","updatedFieldInputValues","addNewInputField","length","filter","_","justifyContent","offset","src","alt","maxWidth","map","key","size","PlusCircleOutlined","color","str","el","createElement","setAttribute","position","appendChild","select","execCommand","removeChild","copyToClipboard","fields","fieldSections","reduce","regionNameField","stateNameField","locationHeader","triangleMarker","generatePopupHTML","SmileOutlined","rotate","HeartTwoTone","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4652c3e2.chunk.js","sourcesContent":["export const FIELD_TYPES = {\n\tnumber: 'Number',\n\ttext: 'Text',\n\tzillowLink: 'Zillow Foreclosures Link',\n\twikipediaLink: 'Wikipedia Link',\n\tsubSectionHeader: 'Sub Section Header'\n}\n\nexport const BLANK_INPUT_FIELD = {\n\tfieldType: FIELD_TYPES.number,\n\tfieldName: '',\n\tfieldDisplayName: '',\n}\n\nexport const DEFAULT_INPUT_VALUES = [\n\t// HEADER *****************************************\n\t// County Name, State\n\t// Tract GEOID\n\t{\n\t\tfieldType: FIELD_TYPES.text,\n\t\tfieldDisplayName: 'Census Tract ID',\n\t\tfieldName: 'geoid_tr',\n\t},\n\t\n\t// Wikipedia Link\n\t{\n\t\tfieldType: FIELD_TYPES.wikipediaLink,\n\t},\n\t\n\t// Foreclosed Houses on Zillow\n\t{\n\t\tfieldType: FIELD_TYPES.zillowLink,\n\t},\n\t\n\t// Contractor Link (if applicable)\n\t\n\t// COUNTY LEVEL INDICATORS\n\n// \tTract Level Indicators*****************************************\n\t{\n\t\tfieldType: FIELD_TYPES.subSectionHeader,\n\t\tfieldDisplayName: 'Tract Level Indicators',\n\t},\n\t\n// \tArea of Concentrated Poverty\n// \tYES/NO' whether designated as an Area of Concentrated Poverty\n\t{\n\t\tfieldType: FIELD_TYPES.text,\n\t\tfieldDisplayName: 'Area of Concentrated Poverty',\n\t\tfieldName: 'acp',\n\t},\n\n// \tLower Mississippi Delta or Mid-Appalachia region?\n// \t\tFannie Mae Region Name\n\t{\n\t\tfieldType: FIELD_TYPES.text,\n\t\tfieldDisplayName: 'Lower Missippi Delta or Mid Appalachia',\n\t\tfieldName: 'fm_region_flag',\n\t},\n\n// \tRural\n// \tYES/NO' for Rural\n\t{\n\t\tfieldType: FIELD_TYPES.text,\n\t\tfieldDisplayName: 'Fannie Mae rural',\n\t\tfieldName: 'rural',\n\t},\n\n// \tFHFA Low Income Area\n// \tYES/NO' for Low Income Area\n\t{\n\t\tfieldType: FIELD_TYPES.text,\n\t\tfieldDisplayName: 'FHFA low income area',\n\t\tfieldName: 'low_income_area',\n\t},\n\n// \tFHFA Minority Area\n// \tYES/NO' for Minority Area\n\t{\n\t\tfieldType: FIELD_TYPES.text,\n\t\tfieldDisplayName: 'FHFA minority area',\n\t\tfieldName: 'minority_area',\n\t},\n\n// \tCRA Eligible\n// \tYES/NO' for CRA market (generally assessed based on state or MSA)\n\t{\n\t\tfieldType: FIELD_TYPES.text,\n\t\tfieldDisplayName: 'cra eligible',\n\t\tfieldName: 'cra_eligibility',\n\t},\n\n// \tHigh Opportunity Zone\n// \tYES/NO' for High Opportunity Zone\n\t{\n\t\tfieldType: FIELD_TYPES.text,\n\t\tfieldDisplayName: 'High Opportunity Area',\n\t\tfieldName: 'high_opp',\n\t},\n\n\t\n\t\n\t\n// \tCounty Level Indicators *****************************************\n\t{\n\t\tfieldType: FIELD_TYPES.subSectionHeader,\n\t\tfieldDisplayName: 'County Level Indicators',\n\t},\n\n// \tFM Persistent Poverty\n// \tYES/NO' for Persistent Poverty\n\t{\n\t\tfieldType: FIELD_TYPES.text,\n\t\tfieldDisplayName: 'Fannie Mae persistent poverty',\n\t\tfieldName: 'per_pov',\n\t},\n\n// \tCounty Total Population 2017\n// \tCounty level total population 2017\n\t{\n\t\tfieldType: FIELD_TYPES.number,\n\t\tfieldDisplayName: 'county total population 2017',\n\t\tfieldName: 'county_total_population_2017',\n\t},\n\n// \tFannie Mae 100% AMI\n// \tCounty level ami 100\n\t{\n\t\tfieldType: FIELD_TYPES.number,\n\t\tfieldDisplayName: 'Fannie Mae 100% AMI',\n\t\tfieldName: 'county_ami_100',\n\t},\n\n// \tFannie Mae 80% AMI\n// \tCounty level ami 80\n\t{\n\t\tfieldType: FIELD_TYPES.number,\n\t\tfieldDisplayName: 'Fannie Mae 80% AMI',\n\t\tfieldName: 'county_ami_80',\n\t},\n\t\n// \tFannie Mae 50% AMI\n// \tCounty level ami 50\n\t{\n\t\tfieldType: FIELD_TYPES.number,\n\t\tfieldDisplayName: 'Fannie Mae 50% AMI',\n\t\tfieldName: 'county_ami_50',\n\t},\n\t\n// \tCounty Median Income 4 Person Household 2017\n// \tCounty level median income 4 person household 2017\n\t{\n\t\tfieldType: FIELD_TYPES.number,\n\t\tfieldDisplayName: 'county median income 4 person household 2017',\n\t\tfieldName: 'county_median_income_4_person_household_2017',\n\t},\n\t\n\n// \tCounty Average Household Size Owner Occupied 2017\n// \tCounty level average household size owner occupied 2017\n\t{\n\t\tfieldType: FIELD_TYPES.number,\n\t\tfieldDisplayName: 'county average household size owner occupied 2017',\n\t\tfieldName: 'county_average_household_size_owner_occupied_2017',\n\t},\n\n\n// \tCounty Average Household Size Renter Occupied 2017\n// \tCounty level average household size renter occupied 2017\n\t{\n\t\tfieldType: FIELD_TYPES.number,\n\t\tfieldDisplayName: 'county average household size renter occupied 2017',\n\t\tfieldName: 'county_average_household_size_renter_occupied_2017',\n\t},\n\t\n// \tCounty Median Age Of Owner Occupied Units 2017\n// \tCounty level median age of owner occupied units 2017\n\t{\n\t\tfieldType: FIELD_TYPES.number,\n\t\tfieldDisplayName: 'county median age of owner occupied units 2017',\n\t\tfieldName: 'county_median_age_of_owner_occupied_units_2017',\n\t},\n\n// \tCounty Median Age Of Renter Occupied Units 2017\n// \tCounty level median age of renter occupied units 2017\n\t{\n\t\tfieldType: FIELD_TYPES.number,\n\t\tfieldDisplayName: 'county median age of renter occupied units 2017',\n\t\tfieldName: 'county_median_age_of_renter_occupied_units_2017',\n\t},\n\t\n// \tCounty Unemployed Pct 2017\n// \tCounty level unemployed pct 2017\n\t{\n\t\tfieldType: FIELD_TYPES.number,\n\t\tfieldDisplayName: 'county unemployed pct 2017',\n\t\tfieldName: 'county_unemployed_pct_2017',\n\t},\n// \tCounty Rental Vacancy Pct 2017\n// \tCounty level rental vacancy pct 2017\n\t{\n\t\tfieldType: FIELD_TYPES.number,\n\t\tfieldDisplayName: 'county rental vacancy pct 2017',\n\t\tfieldName: 'county_rental_vacancy_pct_2017',\n\t},\n// \tCounty Total Rental Units 2017\n// \tCounty level total rental units 2017\n\t{\n\t\tfieldType: FIELD_TYPES.number,\n\t\tfieldDisplayName: 'county total rental units 2017',\n\t\tfieldName: 'county_total_rental_units_2017',\n\t},\n// \tCounty Largest Industry\n// \tCounty level NAICS description for largest industry\n\t{\n\t\tfieldType: FIELD_TYPES.text,\n\t\tfieldDisplayName: 'County Largest Industry',\n\t\tfieldName: 'county_naics_description_for_largest_industry',\n\t},\n\t\n]\n\nconst tEMP = [\n\n\t\n\t{\n\t\tfieldType: FIELD_TYPES.text,\n\t\tfieldDisplayName: 'county gross rent as a pct of income 2017',\n\t\tfieldName: 'county_gross_rent_as_a_pct_of_income_2017',\n\t},\n\t\n\t{\n\t\tfieldType: FIELD_TYPES.text,\n\t\tfieldDisplayName: '% Change in Business Establishments',\n\t\tfieldName: 'county_pct_change_in_establishments_2009_15',\n\t},\n\t\n\t\n]\n\n","import {FIELD_TYPES} from \"./constants\";\n\n\nconst fieldDisplayNameStyle = (isSubSectionHeader = false) => {\n\tif (isSubSectionHeader) {\n\t\treturn `\n\t\t\tfont-weight: bold;\n\t\t\tpadding-top: 16px;\n\t\t\tfont-size: 1.5em;\n\t\t\tline-height: 1em;\n\t\t\tfont-style: italic;\n\t\t\tborder-bottom: 1px solid white;\n\t\t`\n\t}\n\treturn ''\n}\n\nconst fieldValueStyle = () => 'font-size: 1.5em'\n\nconst fieldWrapperStyle = (isText) => isText ? '' : `\n\tposition: relative;\n\tpadding-bottom: 4px;\n\tpadding-top: 4px;\n`\n\n\nconst listItemStyle = () => ''\n\n\nconst textComponent = (text, isText, isSubSectionHeader = false) => `\n\t<div class=\"CDB-infowindow-subtitle\" style=\"${fieldDisplayNameStyle(isSubSectionHeader)}\">${text}</div>\n`\n\nconst textOrNumberContent = (fieldName, fieldDisplayName, isText = false) => `\n\t<div style=\"${fieldWrapperStyle(isText)}\">\n\t\t${textComponent(fieldDisplayName, isText)}\n\t\t<div class=\"CDB-infowindow-title\" style=\"${fieldValueStyle()}\">{{${fieldName}}}</div>\n\t</div>\n`\n\n// TODO: don't hard code county/state names\nconst link = (url, text) => `\n\t<div style=\"${fieldWrapperStyle(true)}\">\n\t\t<div class=\"CDB-infowindow-title\" style=${fieldDisplayNameStyle()}>\n\t\t\t<a href=\"${url}\" target=\"_blank\">🔗${text}</a>\n\t\t</div>\n\t</div>\n`\n\nconst zillowLink = () => link('https://www.zillow.com/{{county_name}}-{{stusps}}/foreclosures/', 'Foreclosures on Zillow')\n\nconst wikipediaLink = () => link('https://en.wikipedia.org/wiki/{{county_name}},_{{stusps}}', 'Wikipedia')\n\nconst subSectionHeader = headerText => textComponent(headerText, true, true)\n\nconst fieldContent = ({fieldName, fieldDisplayName, fieldType}) => {\n\tswitch(fieldType) {\n\t\tcase FIELD_TYPES.text:\n\t\t\treturn textOrNumberContent(fieldName, fieldDisplayName, true)\n\t\tcase FIELD_TYPES.number:\n\t\t\treturn textOrNumberContent(fieldName, fieldDisplayName)\n\t\tcase FIELD_TYPES.zillowLink:\n\t\t\treturn zillowLink()\n\t\tcase FIELD_TYPES.wikipediaLink:\n\t\t\treturn wikipediaLink()\n\t\tcase FIELD_TYPES.subSectionHeader:\n\t\t\treturn subSectionHeader(fieldDisplayName)\n\t\tdefault:\n\t\t\tconsole.warn('Not a valid type')\n\t\t\treturn fieldDisplayName\n\t}\n}\n\nconst fieldContentWrapperStyle = (fieldType) => [FIELD_TYPES.zillowLink, FIELD_TYPES.wikipediaLink].includes(fieldType) ? '' : 'min-height: 42px;'\n\nconst fieldSection = (fieldSectionsAccumulator, fieldInfo) => {\n\tif (!fieldInfo.fieldType) return fieldSectionsAccumulator\n\t\n\tconst content = fieldContent(fieldInfo)\n\t\n\treturn fieldSectionsAccumulator + `\n    <li class=\"CDB-infowindow-listItem\" style=\"${listItemStyle()}\">\n    \t<div style=\"${fieldContentWrapperStyle(fieldInfo.fieldType)}\">\n\t\t\t\t${content}\n      </div>\n    </li>\n  `\n}\n\n\n// TODO: let user specify fields\nconst locationHeader = (regionNameField = 'county_name', stateNameField = 'stusps') => `\n\t<div class=\"CDB-infowindow-header CDB-infowindow-headerBg CDB-infowindow-headerBg--light js-header\" style=\"background: #191e21; padding-bottom: 16px;\">\n      <ul class=\"CDB-infowindow-list\">\n        <li class=\"CDB-infowindow-listItem\">\n          <h4 class=\"CDB-infowindow-title\" style=\"font-size: 24px; line-height: 24px;\">\n            {{${regionNameField}}}, {{${stateNameField}}}\n          </h4>\n        </li>\n      </ul>\n    </div>\n`\n\nconst triangleMarker = (isDarkStyle) => `\n\t<div style=\"\n\t\t\tposition: relative;\n\t\t\tbottom: 24px;\n\t\t\tleft: 24px;\n\t\">\n    <div style=\"\n\t\t\tposition: absolute;\n\t\t\ttop: 0;\n\t\t\tleft: 0;\n\t\t\twidth: 0;\n\t\t\theight: 0;\n\t\t\tborder-top: 16px solid ${isDarkStyle ? '#2e3c42' : 'white'};\n\t\t\tborder-right: 24px solid transparent;\n\t\t\tz-index: 3;\n\t\t\t\t\"/>\n    </div>\n`\n\nexport const generatePopupHTML = (fields, isDarkStyle) => {\n\tconst fieldSections = fields.reduce(fieldSection, '')\n\treturn `\n    <div class=\"CDB-infowindow CDB-infowindow--${isDarkStyle ? 'dark' : 'light'} js-infowindow\">\n      <div class=\"CDB-infowindow-close js-close\"></div>\n      <div class=\"CDB-infowindow-container\">\n        <div class=\"CDB-infowindow-bg\">\n        ${locationHeader()}\n          <div class=\"CDB-infowindow-inner js-inner\">\n            <ul class=\"CDB-infowindow-list js-content\">\n                ${fieldSections}\n            </ul>\n          </div>\n        </div>\n        ${triangleMarker(isDarkStyle)}\n      </div>\n    </div>\n  `\n}\n\n\nexport const copyToClipboard = str => {\n\tconst el = document.createElement('textarea');\n\tel.value = str;\n\tel.setAttribute('readonly', '');\n\tel.style.position = 'absolute';\n\tel.style.left = '-9999px';\n\tdocument.body.appendChild(el);\n\tel.select();\n\tdocument.execCommand('copy');\n\tdocument.body.removeChild(el);\n};\n\n","import React from 'react'\n\nexport const GlowButton = ({children, onClick}) => (\n\t<button className=\"glow-on-hover\" type=\"button\" onClick={onClick}>{children}</button>\n)\n","import React from \"react\";\nimport {Input, Select, Button} from \"antd\";\nimport {FIELD_TYPES} from \"./constants\";\n\nconst calculateUIInfo = (fieldType) => {\n\tswitch(fieldType) {\n\t\tcase FIELD_TYPES.text:\n\t\t\treturn {\n\t\t\t\tshowFieldName: true,\n\t\t\t\tfieldDisplayNameLabel: 'Field Display Name',\n\t\t\t}\n\t\tcase FIELD_TYPES.number:\n\t\t\treturn {\n\t\t\t\tshowFieldName: true,\n\t\t\t\tfieldDisplayNameLabel: 'Field Display Name',\n\t\t\t}\n\t\tcase FIELD_TYPES.zillowLink:\n\t\t\treturn {}\n\t\tcase FIELD_TYPES.wikipediaLink:\n\t\t\treturn {}\n\t\tcase FIELD_TYPES.subSectionHeader:\n\t\t\treturn {\n\t\t\t\tfieldDisplayNameLabel: 'Header Text',\n\t\t\t}\n\t\tdefault:\n\t\t\tconsole.warn('Not a valid type')\n\t\t\treturn {}\n\t}\n}\n\nexport const FieldInputRow = ({index, fieldInputValue, onChange, onDeleteField}) => {\n\tconst {showFieldName, fieldDisplayNameLabel} = calculateUIInfo(fieldInputValue.fieldType)\n\treturn (\n\t\t<div className=\"field-input-container\" style={{display: 'flex'}}>\n\t\t\t{fieldDisplayNameLabel && <Input\n\t\t\t\tstyle={{flex: 2}}\n\t\t\t\taddonBefore={fieldDisplayNameLabel}\n\t\t\t\tvalue={fieldInputValue.fieldDisplayName}\n\t\t\t\tonChange={({target}) => onChange({...fieldInputValue, fieldDisplayName: target.value})}\n\t\t\t/>}\n\t\t\t\n\t\t\t{showFieldName && <Input\n\t\t\t\tstyle={{flex: 2}}\n\t\t\t\taddonBefore=\"CARTO Field\"\n\t\t\t\tplaceholer={\"eg state_pop_2018\"}\n\t\t\t\tvalue={fieldInputValue.fieldName}\n\t\t\t\tonChange={({target}) => onChange({...fieldInputValue, fieldName: target.value.trim()})}\n\t\t\t/>}\n\t\t\t\n\t\t\t<Select\n\t\t\t\tstyle={{flex: 1}}\n\t\t\t\tdefaultValue={fieldInputValue.fieldType}\n\t\t\t\tclassName=\"field-type\"\n\t\t\t\tonChange={(fieldType) => onChange({...fieldInputValue, fieldType})}\n\t\t\t>\n\t\t\t\t<Select.Option value={FIELD_TYPES.number}>{FIELD_TYPES.number}</Select.Option>\n\t\t\t\t<Select.Option value={FIELD_TYPES.text}>{FIELD_TYPES.text}</Select.Option>\n\t\t\t\t<Select.Option value={FIELD_TYPES.zillowLink}>{FIELD_TYPES.zillowLink}</Select.Option>\n\t\t\t\t<Select.Option value={FIELD_TYPES.wikipediaLink}>{FIELD_TYPES.wikipediaLink}</Select.Option>\n\t\t\t\t<Select.Option value={FIELD_TYPES.subSectionHeader}>{FIELD_TYPES.subSectionHeader}</Select.Option>\n\t\t\t</Select>\n\t\t\t<Button className=\"delete-button\" onClick={() => onDeleteField(index)} danger>X</Button>\n\t\t</div>\n\t)\n}\n","import React from 'react'\nimport { Switch } from 'antd';\nimport { CloseOutlined, CheckOutlined } from '@ant-design/icons';\n\n\nexport const DarkStyleSwitch = ({isDarkStyle, onToggle}) => (\n\t<div className={`dark-style-switch ${isDarkStyle && 'is-dark-style'}`} style={{display: 'flex'}}>\n\t\t<div className={'text'}>Light style</div>\n\t\t<Switch\n\t\t\tcheckedChildren={<CheckOutlined />}\n\t\t\tunCheckedChildren={<CloseOutlined />}\n\t\t\tchecked={isDarkStyle}\n\t\t\tonClick={onToggle}\n\t\t/>\n\t\t<div className={'text'}>Dark style</div>\n\t</div>\n)\n","// CREDIT: https://dev.to/vitaliemaldur/resize-event-listener-using-react-hooks-1k0c\nimport { useState, useEffect } from 'react';\n\nconst getWidth = () => window.innerWidth\n\t|| document.documentElement.clientWidth\n\t|| document.body.clientWidth;\n\nexport const useCurrentWidth = () => {\n\t// save current window width in the state object\n\tlet [width, setWidth] = useState(getWidth());\n\t\n\t// in this case useEffect will execute only once because\n\t// it does not have any dependencies.\n\tuseEffect(() => {\n\t\t// timeoutId for debounce mechanism\n\t\tlet timeoutId = null;\n\t\tconst resizeListener = () => {\n\t\t\t// prevent execution of previous setTimeout\n\t\t\tclearTimeout(timeoutId);\n\t\t\t// change width from the state object after 150 milliseconds\n\t\t\ttimeoutId = setTimeout(() => setWidth(getWidth()), 150);\n\t\t};\n\t\t// set resize listener\n\t\twindow.addEventListener('resize', resizeListener);\n\t\t\n\t\t// clean up function\n\t\treturn () => {\n\t\t\t// remove resize listener\n\t\t\twindow.removeEventListener('resize', resizeListener);\n\t\t}\n\t}, [])\n\t\n\treturn width;\n}\n","import React from 'react';\nimport {useCurrentWidth} from \"./useCurrentWidth\";\n\nconst BAR_SIDE_MARGIN = 36\n\nexport const HippoBar = ({pageSectionIndex, pageSectionCount}) => {\n\tconst screenWidth = useCurrentWidth()\n\t\n\tconst isFirstSection = pageSectionIndex === 0\n\tconst isLastSection = pageSectionIndex === pageSectionCount - 1\n\t\n\tconst pageProgressPercentage = pageSectionIndex / (pageSectionCount - 1)\n\tconst hippoLeftPosition = BAR_SIDE_MARGIN + pageProgressPercentage * (screenWidth - 2 * BAR_SIDE_MARGIN)\n\tconst hippoTopPosition = isFirstSection ? '2em' : 8\n\t\n\treturn (\n\t\t<div className=\"hippo-bar\">\n\t\t\t<div>\n\t\t\t\t<span className=\"hippo-popup-mus\" style={{fontSize: isFirstSection ? '3em' : '12px'}}>Hippo-popup-mus</span> | CARTO Popup Generator\n\t\t\t</div>\n\t\t\t<span\n\t\t\t\tclassName=\"hippo-emoji\"\n\t\t\t\trole=\"img\"\n\t\t\t\taria-label=\"sheep\"\n\t\t\t\tstyle={{\n\t\t\t\t\tleft: hippoLeftPosition,\n\t\t\t\t\ttop: hippoTopPosition,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t🦛\n\t\t\t</span>\n\t\t\t{isLastSection && <div style={{marginRight: 8}}>\n\t\t\t\t🎉\n\t\t\t</div>}\n\t\t</div>\n\t)\n}\n","import React, {useCallback, useState} from 'react';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport {copyToClipboard, generatePopupHTML} from \"./htmlGenerators\";\nimport {Button} from \"antd\";\nimport {HeartTwoTone, PlusCircleOutlined, SmileOutlined} from '@ant-design/icons';\nimport { Scrollama, Step } from 'react-scrollama';\n\nimport {GlowButton} from \"./GlowButton\";\nimport {BLANK_INPUT_FIELD, DEFAULT_INPUT_VALUES} from \"./constants\";\nimport {FieldInputRow} from \"./FieldInputRow\";\nimport {DarkStyleSwitch} from \"./DarkStyleSwitch\";\nimport {HippoBar} from \"./HippoBar\";\n\n\nfunction App() {\n  const [pageSectionIndex, setPageSectionIndex] = useState(0)\n  const onStepEnter = useCallback(\n    ({ element, data, direction }) => setPageSectionIndex(data),\n    [setPageSectionIndex]\n  )\n  \n  const [isDarkStyle, setIsDarkStyle] = useState(true)\n  const onToggle = useCallback(\n    () => setIsDarkStyle(!isDarkStyle),\n    [isDarkStyle, setIsDarkStyle]\n  )\n  \n  const [fieldInputValues, setFieldInputValues] = useState(DEFAULT_INPUT_VALUES)\n  const onChangeInput = useCallback((newValue, i) => {\n    const updatedFieldInputValues = [...fieldInputValues]\n    updatedFieldInputValues[i] = newValue\n    setFieldInputValues(updatedFieldInputValues)\n  }, [fieldInputValues, setFieldInputValues])\n  \n  const addNewInputField = useCallback(() => {\n    onChangeInput(BLANK_INPUT_FIELD, fieldInputValues.length)\n  }, [fieldInputValues])\n  \n  const onDeleteField = useCallback((index) => {\n    setFieldInputValues(fieldInputValues.filter((_, i) => i !== index))\n  }, [fieldInputValues])\n  \n  return (\n    <div style={{display: 'flex', justifyContent: 'center'}}>\n      <div className=\"App\">\n        <HippoBar pageSectionIndex={pageSectionIndex} pageSectionCount={4}/>\n        \n        <Scrollama onStepEnter={onStepEnter} offset={0.2}>\n          \n          <Step data={0}>\n            <section className=\"splash-image\">\n              <img src=\"https://user-images.githubusercontent.com/6570507/78705140-e1c49700-78c1-11ea-827e-74b13bd2e439.gif\" alt=\"popup demo\" style={{maxWidth: '100%'}}/>\n            </section>\n          </Step>\n          \n          <Step data={1}>\n            <section className=\"field-inputs-section\">\n              <h2>1. Specify the fields you want in your popup:</h2>\n              <DarkStyleSwitch isDarkStyle={isDarkStyle} onToggle={onToggle}/>\n              {fieldInputValues.map((fieldInputValue, i) => (\n                <FieldInputRow\n                  key={i}\n                  index={i}\n                  onChange={newValue => onChangeInput(newValue, i)}\n                  onDeleteField={onDeleteField}\n                  fieldInputValue={fieldInputValue}/>)\n              )}\n              <Button size=\"large\" onClick={addNewInputField}>Add another field <PlusCircleOutlined style={{color: 'skyblue'}}/></Button>\n            </section>\n          </Step>\n          \n          <Step data={2}>\n            <section>\n              <h2>2.</h2>\n              <GlowButton onClick={() => copyToClipboard(generatePopupHTML(fieldInputValues, isDarkStyle))}>\n                Copy popup HTML to clipboard!\n              </GlowButton>\n            </section>\n          </Step>\n          \n          <Step data={3}>\n            <section>\n              <h2>3. Paste into the CARTO custom HTML editor!</h2>\n              <p>See photo instructions below.\n                Most importantly, you need to toggle on all the fields you want displayed in the popup before going to the custom editor (toggling on all possible fields is the fool-proof way) <SmileOutlined rotate={180}/>\n              </p>\n              <img src=\"https://user-images.githubusercontent.com/6570507/78468037-3c929e80-76c8-11ea-8521-266ea1cbf47a.png\" alt=\"custom popup instructions\" style={{maxWidth: '100%'}}/>\n              <img src=\"https://user-images.githubusercontent.com/6570507/78468098-f853ce00-76c8-11ea-847e-77f23fc55cab.png\" alt=\"paste into editor\" style={{maxWidth: '100%'}}/>\n            </section>\n          </Step>\n        \n        \n        \n        </Scrollama>\n        \n        <p>Made with <HeartTwoTone style={{color: 'red'}} /> by David</p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}